{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, // Get document instance\ngetDoc, // Get document data \nsetDoc // Set document data\n} from 'firebase/firestore'; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCPDXYZcBhCn4LFFzi3Zh8M_CmlGdIPi_U\",\n  authDomain: \"crwn-clothing-db-9d348.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-9d348\",\n  storageBucket: \"crwn-clothing-db-9d348.appspot.com\",\n  messagingSenderId: \"749511831893\",\n  appId: \"1:749511831893:web:e790b8a2a2aaa4ca0d3fdc\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let addtionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...addtionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","addtionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["/Users/mufengwei/Documents/GitHub/E-Commerce/crwn-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {\n    getAuth,\n    signInWithRedirect,\n    signInWithPopup,\n    GoogleAuthProvider,\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    signOut,\n    onAuthStateChanged,\n} from 'firebase/auth';\nimport {\n    getFirestore,\n    doc,   // Get document instance\n    getDoc,  // Get document data \n    setDoc,   // Set document data\n} from 'firebase/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCPDXYZcBhCn4LFFzi3Zh8M_CmlGdIPi_U\",\n  authDomain: \"crwn-clothing-db-9d348.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-9d348\",\n  storageBucket: \"crwn-clothing-db-9d348.appspot.com\",\n  messagingSenderId: \"749511831893\",\n  appId: \"1:749511831893:web:e790b8a2a2aaa4ca0d3fdc\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n    prompt: \"select_account\"\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (userAuth, addtionalInformation ={}) => {\n    if (!userAuth) return;\n\n    const userDocRef = doc(db, 'users', userAuth.uid);\n\n    const userSnapshot = await getDoc(userDocRef);\n\n    if (!userSnapshot.exists()) {\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt,\n                ...addtionalInformation\n            });\n        } catch (error) {\n            console.log('error creating the user', error.message);\n        }\n    }\n\n    return userDocRef;\n}\n\nexport const  createAuthUserWithEmailAndPassword = async (email, password) => {\n    if (!email || !password) return;\n\n    return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const  signInAuthUserWithEmailAndPassword = async (email, password) => {\n    if (!email || !password) return;\n\n    return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback) => onAuthStateChanged(auth, callback);"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACIC,OADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,EAKIC,8BALJ,EAMIC,0BANJ,EAOIC,OAPJ,EAQIC,kBARJ,QASO,eATP;AAUA,SACIC,YADJ,EAEIC,GAFJ,EAEW;AACPC,MAHJ,EAGa;AACTC,MAJJ,CAIc;AAJd,OAKO,oBALP,C,CAOA;;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,wCAFS;EAGrBC,SAAS,EAAE,wBAHU;EAIrBC,aAAa,EAAE,oCAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,MAAMC,WAAW,GAAGpB,aAAa,CAACa,cAAD,CAAjC;AAEA,MAAMQ,cAAc,GAAG,IAAIjB,kBAAJ,EAAvB;AAEAiB,cAAc,CAACC,mBAAf,CAAmC;EAC/BC,MAAM,EAAE;AADuB,CAAnC;AAIA,OAAO,MAAMC,IAAI,GAAGvB,OAAO,EAApB;AACP,OAAO,MAAMwB,qBAAqB,GAAG,MAAMtB,eAAe,CAACqB,IAAD,EAAOH,cAAP,CAAnD;AACP,OAAO,MAAMK,wBAAwB,GAAG,MAAMxB,kBAAkB,CAACsB,IAAD,EAAOH,cAAP,CAAzD;AAEP,OAAO,MAAMM,EAAE,GAAGlB,YAAY,EAAvB;AAEP,OAAO,MAAMmB,0BAA0B,GAAG,gBAAOC,QAAP,EAA8C;EAAA,IAA7BC,oBAA6B,uEAAP,EAAO;EACpF,IAAI,CAACD,QAAL,EAAe;EAEf,MAAME,UAAU,GAAGrB,GAAG,CAACiB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACG,GAAvB,CAAtB;EAEA,MAAMC,YAAY,GAAG,MAAMtB,MAAM,CAACoB,UAAD,CAAjC;;EAEA,IAAI,CAACE,YAAY,CAACC,MAAb,EAAL,EAA4B;IACxB,MAAM;MAACC,WAAD;MAAcC;IAAd,IAAuBP,QAA7B;IACA,MAAMQ,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEA,IAAI;MACA,MAAM1B,MAAM,CAACmB,UAAD,EAAa;QACrBI,WADqB;QAErBC,KAFqB;QAGrBC,SAHqB;QAIrB,GAAGP;MAJkB,CAAb,CAAZ;IAMH,CAPD,CAOE,OAAOS,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAK,CAACG,OAA7C;IACH;EACJ;;EAED,OAAOX,UAAP;AACH,CAxBM;AA0BP,OAAO,MAAOY,kCAAkC,GAAG,OAAOP,KAAP,EAAcQ,QAAd,KAA2B;EAC1E,IAAI,CAACR,KAAD,IAAU,CAACQ,QAAf,EAAyB;EAEzB,OAAO,MAAMvC,8BAA8B,CAACmB,IAAD,EAAOY,KAAP,EAAcQ,QAAd,CAA3C;AACH,CAJM;AAMP,OAAO,MAAOC,kCAAkC,GAAG,OAAOT,KAAP,EAAcQ,QAAd,KAA2B;EAC1E,IAAI,CAACR,KAAD,IAAU,CAACQ,QAAf,EAAyB;EAEzB,OAAO,MAAMtC,0BAA0B,CAACkB,IAAD,EAAOY,KAAP,EAAcQ,QAAd,CAAvC;AACH,CAJM;AAMP,OAAO,MAAME,WAAW,GAAG,YAAY,MAAMvC,OAAO,CAACiB,IAAD,CAA7C;AAEP,OAAO,MAAMuB,0BAA0B,GAAIC,QAAD,IAAcxC,kBAAkB,CAACgB,IAAD,EAAOwB,QAAP,CAAnE"},"metadata":{},"sourceType":"module"}